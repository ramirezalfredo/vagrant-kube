---
#- debug: var=ansible_facts
- name: Set authorized key taken from file
  authorized_key:
    user: alfredo
    state: present
    key: "{{ lookup('file', '/home/alfredo/.ssh/id_rsa.pub') }}"

- name: Docker | Install CS Docker Engine repository
  when: ansible_facts['os_family'] == "CentOS"
  yum_repository:
    name: docker
    description: Docker Repository
    baseurl: https://yum.dockerproject.org/repo/main/centos/7/
    gpgcheck: 1
    gpgkey: https://yum.dockerproject.org/gpg

- name: Kubernetes | Install Kubernetes repository
  when: ansible_facts['os_family'] == "CentOS"
  yum_repository: 
    name: kubernetes
    description: Kubernetes Repository
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
    gpgcheck: 1
    gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

# - name: K8s | Install python-apt
#   when: ansible_facts['os_family'] == "Debian"
#   package:
#     name: python-apt
#     state: present

- name: K8s | Install Kubernetes repository
  when: ansible_facts['os_family'] == "Debian"
  apt_repository: 
    repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: kubernetes

- name: SELinux
  when: ansible_facts['os_family'] == "CentOS"
  selinux:
    state: disabled

- name: Docker | Install docker-engine
  when: ansible_facts['os_family'] == "CentOS"
  package:
    name: docker-engine-17.03.0.ce-1.el7.centos.x86_64
    state: present

- name: kKs | Add user to the Docker group
  command: usermod -aG docker alfredo

- name: Docker | Configure cgroup driver
  when: ansible_facts['os_family'] == "CentOS"
  template:
    src: daemon.json
    dest: /etc/docker/daemon.json
  notify:
    - restart docker

- name: Start Docker
  service: 
    name: docker
    state: started
    enabled: yes

- name: K8s | Configure iptables
  when: ansible_facts['os_family'] == "CentOS"
  template:
    src: k8s.conf
    dest: /etc/sysctl.d/k8s.conf

- name: K8s | Reload sysctl
  command: sysctl --system

- name: K8s | Install kubeadm
  apt:
    name: kubeadm=1.12.5-00
    state: present

- name: K8s | Install kubectl
  apt:
    name: kubectl=1.12.5-00
    state: present

- name: K8s | Install kubelet
  apt:
    name: kubelet=1.12.5-00
    state: present
  notify:
    - restart kubelet

- name: K8s | Start kubelet
  service:
    name: kubelet
    state: started
    enabled: yes